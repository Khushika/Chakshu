// This file is automatically generated. Do not edit it directly.
import { createClient } from "@supabase/supabase-js";
import type { Database } from "./types";

// Check if environment variables are configured
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY;

// Create a mock client for demo mode when environment variables are not set
const createMockClient = () => {
  const mockAuth = {
    getSession: () => Promise.resolve({ data: { session: null }, error: null }),
    signUp: () =>
      Promise.resolve({
        data: null,
        error: { name: "MockError", message: "Demo mode active", status: 400 },
      }),
    signInWithPassword: () =>
      Promise.resolve({
        data: null,
        error: { name: "MockError", message: "Demo mode active", status: 400 },
      }),
    signOut: () => Promise.resolve({ error: null }),
    resetPasswordForEmail: () =>
      Promise.resolve({
        data: null,
        error: { name: "MockError", message: "Demo mode active", status: 400 },
      }),
    onAuthStateChange: () => ({
      data: { subscription: { unsubscribe: () => {} } },
    }),
  };

  return {
    auth: mockAuth,
    from: () => ({
      select: () => Promise.resolve({ data: [], error: null }),
      insert: () => Promise.resolve({ data: null, error: null }),
      update: () => Promise.resolve({ data: null, error: null }),
      delete: () => Promise.resolve({ data: null, error: null }),
    }),
  };
};

// Export either real or mock client based on configuration
export const supabase =
  SUPABASE_URL && SUPABASE_PUBLISHABLE_KEY
    ? createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY)
    : (createMockClient() as any);

// Flag to indicate if we're in demo mode
export const isDemoMode = !SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY;
